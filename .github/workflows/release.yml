name: Create Squirrel.Windows release

on:
  workflow_dispatch:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    name: Create Release
    runs-on: windows-latest
    timeout-minutes: 10

    env:
      NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages/

    steps:

    - uses: actions/checkout@v2
      with:
        submodules: recursive
        fetch-depth: 0

    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Cache nuget packages
      id: cache-nuget
      uses: actions/cache@v2
      with:
        path: ${{ github.workspace }}/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: NuGet restore
      run: ./.NuGet/NuGet.exe restore

    - name: Build Squirrel.Windows solution
      run: msbuild /p:Configuration=Release     

    - name: Prepare release artifact
      shell: bash
      run: |
        vendor/7zip/7z.exe a Squirrel.Windows-${{ github.event.ref }}.zip @electron-builder.listfile.txt

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.event.ref }}
        release_name: Squirrel.Windows ${{ github.event.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./Squirrel.Windows-${{ github.event.ref }}.zip
        asset_name: Squirrel.Windows-${{ github.event.ref }}.zip
        asset_content_type: application/zip
